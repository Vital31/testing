user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Основные настройки
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Кэширование
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=iot_cache:10m max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_valid 200 302 10m;
    proxy_cache_valid 404 1m;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=devices:10m rate=100r/s;

    # Upstream серверы для балансировки нагрузки
    upstream api_gateway {
        least_conn;
        server api-gateway:8000 max_fails=3 fail_timeout=30s;
        # Можно добавить больше экземпляров для горизонтального масштабирования
        # server api-gateway-2:8000 max_fails=3 fail_timeout=30s;
        # server api-gateway-3:8000 max_fails=3 fail_timeout=30s;
    }

    upstream device_service {
        least_conn;
        server device-service:5000 max_fails=3 fail_timeout=30s;
        # Можно добавить больше экземпляров
        # server device-service-2:5000 max_fails=3 fail_timeout=30s;
    }

    upstream analytics_service {
        least_conn;
        server analytics-service:5000 max_fails=3 fail_timeout=30s;
    }

    upstream user_service {
        least_conn;
        server user-service:5000 max_fails=3 fail_timeout=30s;
    }

    # Канареечное развертывание для user-service
    split_clients "${remote_addr}${request_uri}" $user_service_version {
        10% user_service_v2;
        90% user_service_v1;
    }

    upstream user_service_v1 {
        server user-service:5000 max_fails=3 fail_timeout=30s;
    }

    upstream user_service_v2 {
        server user-service-v2:5000 max_fails=3 fail_timeout=30s;
    }

    # Основной сервер
    server {
        listen 80;
        server_name localhost;

        # Статические файлы
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # API Gateway
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # Кэширование для GET запросов
            proxy_cache iot_cache;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_cache_valid 200 5m;
            
            proxy_pass http://api_gateway/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Таймауты
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Буферизация
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Устройства
        location /devices/ {
            limit_req zone=devices burst=50 nodelay;
            
            proxy_cache iot_cache;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_cache_valid 200 2m;
            
            proxy_pass http://device_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Аналитика
        location /analytics/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_cache iot_cache;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_cache_valid 200 1m;
            
            proxy_pass http://analytics_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Пользователи с канареечным развертыванием
        location /users/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_cache iot_cache;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_cache_valid 200 5m;
            
            proxy_pass http://$user_service_version/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Проверка здоровья
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Метрики nginx
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }

        # Основная страница
        location / {
            try_files $uri $uri/ /index.html;
            root /var/www/static;
            index index.html;
        }

        # Обработка ошибок
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /var/www/static;
        }
    }

    # HTTPS сервер (для продакшена)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # Остальные настройки аналогичны HTTP серверу
    # }
} 